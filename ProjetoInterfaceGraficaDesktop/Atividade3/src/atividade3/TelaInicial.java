/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package atividade3;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 *  oluca
 */
// Classe para a consulta
class Consulta {

    String paciente;
    String cpf;
    String telefone;
    String data;
    boolean jaEraPaciente;
    boolean consultaRealizada;
    String observacao;

    // Construtor
    public Consulta(String paciente, String cpf, String telefone, String data, boolean jaEraPaciente, boolean consultaRealizada) {
        this.paciente = paciente;
        this.cpf = cpf;
        this.telefone = telefone;
        this.data = data;
        this.jaEraPaciente = jaEraPaciente;
        this.consultaRealizada = consultaRealizada;
        this.observacao = "";
    }

    @Override
    public String toString() {
        return paciente + " - " + data;
    }
}

public class TelaInicial extends javax.swing.JFrame {

    private DefaultTableModel tableModel;
    private List<Consulta> consultas = new ArrayList<>();

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
        configureTable();
        populateTable();
    }

    private void configureTable() {
        tableModel = new DefaultTableModel(
                new Object[][]{},
                new String[]{"Paciente", "CPF", "Telefone", "Data", "Já Era Paciente?", "Consulta Realizada"}
        );
        jTable1.setModel(tableModel);
        // Define o renderizador para as colunas booleanas
        jTable1.getColumnModel().getColumn(4).setCellRenderer(new BooleanRenderer());
        jTable1.getColumnModel().getColumn(5).setCellRenderer(new BooleanRenderer());

        // Ajusta a largura das colunas
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(150); // Paciente
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(120); // CPF
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(120); // Telefone
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(100); // Data
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(150); // Já Era Paciente?
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(150); // Consulta Realizada
    }

    private void populateTable() {
        consultas.clear();
        // Adicionando alguns dados iniciais para teste
        consultas.add(new Consulta("João Silva", "123.456.789-00", "(11) 98765-4321", "2024-08-10", true, false));
        consultas.add(new Consulta("Maria Oliveira", "987.654.321-00", "(21) 12345-6789", "2024-08-11", false, false));
        updateTable();
    }

    public void adicionarConsulta(Consulta novaConsulta) {
        consultas.add(novaConsulta);
        updateTable(); // Atualiza a tabela com a nova lista de consultas
    }

    public void updateTable() {
        tableModel.setRowCount(0);
        for (Consulta consulta : consultas) {
            tableModel.addRow(new Object[]{
                consulta.paciente,
                consulta.cpf,
                consulta.telefone,
                consulta.data,
                consulta.jaEraPaciente,
                consulta.consultaRealizada
            });
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        // Preenche a lista de consultas com dados iniciais
        populateTable();
    }

    public class BooleanRenderer extends DefaultTableCellRenderer {

        @Override
        protected void setValue(Object value) {
            if (value instanceof Boolean) {
                setText((Boolean) value ? "Sim" : "Não");
            } else {
                super.setValue(value);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Boas Vindas ao sistema de agendamento");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Paciente", "CPF", "Telefone", "Data", "Já era paciente?", "Consulta realizada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Nova Consulta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir Consulta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Finalizar Consulta");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(234, 234, 234))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Abre a tela de cadastro de consulta
        TelaCadastro telaCadastro = new TelaCadastro(this);
        telaCadastro.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            // Remove a consulta da lista exibida
            consultas.remove(selectedRow);
            // Atualiza a tabela para refletir a remoção
            updateTable();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma consulta para excluir.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            // Obtém os dados da consulta selecionada
            Consulta consultaSelecionada = consultas.get(selectedRow);

            // Cria e exibe a TelaConsulta, passando os dados da consulta e a referência da TelaInicial
            TelaConsulta telaConsulta = new TelaConsulta(consultaSelecionada, this);
            telaConsulta.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma consulta para finalizar.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    public void addConsulta(Consulta consulta) {
        consultas.add(consulta);
        updateTable();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
