package br.com.cenaflix.podcast.gui;

import br.com.cenaflix.podcast.service.PodcastService;
import br.com.cenaflix.podcast.Podcast;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Classe que representa a tela de listagem de podcasts da aplicação Cenaflix.
 * Essa tela permite que os usuários vejam todos os podcasts cadastrados e
 * busquem por um produtor específico.
 *
 *  oluca
 */

public class ListagemPodcast extends javax.swing.JFrame {

    /**
     * Construtor para ListagemPodcast
     *
     */
    public ListagemPodcast() {
        initComponents();
    }

    /**
     * Método para atualizar a tabela com os podcasts encontrados.
     *
     * @param podcasts a lista de podcasts a serem exibidos na tabela
     */
    private void atualizarTabela(List<Podcast> podcasts) {
        DefaultTableModel model = (DefaultTableModel) tabelaListagem.getModel();
        model.setRowCount(0); 

        for (Podcast podcast : podcasts) {
            model.addRow(new Object[]{
                podcast.getId(),
                podcast.getProdutor(),
                podcast.getNome(),
                podcast.getNumeroEpisodio(),
                podcast.getDuracao(),
                podcast.getUrlRepositorio()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cenaflix = new javax.swing.JLabel();
        LISTAGEM = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        textFiltroPodcast = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaListagem = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Cenaflix.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        Cenaflix.setText("CENAFLIX");

        LISTAGEM.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LISTAGEM.setText("LISTAGEM");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Pesquisar podcast por produtor");

        textFiltroPodcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFiltroPodcastActionPerformed(evt);
            }
        });

        tabelaListagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Produtor", "Nome", "N Episodio", "Duração", "URL Repositório"
            }
        ));
        jScrollPane1.setViewportView(tabelaListagem);

        btnPesquisar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(429, 450, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(256, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Cenaflix)
                        .addGap(228, 228, 228))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFiltroPodcast, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LISTAGEM))
                        .addGap(81, 81, 81))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(Cenaflix)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LISTAGEM)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textFiltroPodcast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFiltroPodcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFiltroPodcastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFiltroPodcastActionPerformed
    /**
     * Ação realizada ao pressionar o botão de Pesquisar. Este método deve
     * realizar a busca por podcasts com base no produtor inserido.
     *
     * @param evt o evento acionado ao clicar no botão de Pesquisar
     */
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        btnPesquisar.setToolTipText("Clique para ver a listagem de podcasts cadastrados");

        String produtor = textFiltroPodcast.getText();

        if (produtor.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um produtor para buscar.",
                    "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        PodcastService podcastService = new PodcastService();
        List<Podcast> podcasts = podcastService.listarPodcasts();
        if (podcasts.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum podcast encontrado para o produtor: " + produtor,
                    "Resultado da Busca", JOptionPane.INFORMATION_MESSAGE);
        } else {
            atualizarTabela(podcasts);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * Método principal que inicia a aplicação.
     * 
     * @param args os argumentos de linha de comando
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(ListagemPodcast.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(ListagemPodcast.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(ListagemPodcast.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(ListagemPodcast.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new ListagemPodcast().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Cenaflix;
    private javax.swing.JLabel LISTAGEM;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaListagem;
    private javax.swing.JTextField textFiltroPodcast;
    // End of variables declaration//GEN-END:variables
}
