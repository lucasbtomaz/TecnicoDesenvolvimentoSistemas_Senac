package br.com.pridecare.gui;

import br.com.pridecare.data.DatabaseConnection;
import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Classe Login representa a tela de login do sistema PrideCare.
 * <p>
 * Esta classe fornece a interface gráfica para que o usuário insira suas
 * credenciais de login e senha, e tenta realizar a autenticação com o sistema.
 * </p>
 */
public class Login extends javax.swing.JFrame {

    /**
     * Construtor da classe Login. Inicializa os componentes gráficos da tela de
     * login.
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        painelCor = new javax.swing.JPanel();
        jPassword = new javax.swing.JPasswordField();
        Senha = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        jTextLogin = new javax.swing.JTextField();
        Login = new javax.swing.JLabel();
        jCheckBoxMostrarSenha = new javax.swing.JCheckBox();
        nomeSistema = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        painelCor.setBackground(new java.awt.Color(102, 0, 102));

        jPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordActionPerformed(evt);
            }
        });

        Senha.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Senha.setForeground(new java.awt.Color(255, 255, 255));
        Senha.setText("Senha:");

        btnLogin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jTextLogin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLoginActionPerformed(evt);
            }
        });

        Login.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Login.setForeground(new java.awt.Color(255, 255, 255));
        Login.setText("Login:");

        jCheckBoxMostrarSenha.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxMostrarSenha.setText("Mostrar a senha");
        jCheckBoxMostrarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMostrarSenhaActionPerformed(evt);
            }
        });

        nomeSistema.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        nomeSistema.setForeground(new java.awt.Color(255, 255, 255));
        nomeSistema.setText("PRIDE CARE");

        javax.swing.GroupLayout painelCorLayout = new javax.swing.GroupLayout(painelCor);
        painelCor.setLayout(painelCorLayout);
        painelCorLayout.setHorizontalGroup(
            painelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCorLayout.createSequentialGroup()
                .addGroup(painelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCorLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(nomeSistema))
                    .addGroup(painelCorLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCorLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(painelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Senha, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextLogin)
                                .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBoxMostrarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        painelCorLayout.setVerticalGroup(
            painelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCorLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(nomeSistema)
                .addGap(52, 52, 52)
                .addComponent(Login)
                .addGap(18, 18, 18)
                .addComponent(jTextLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Senha)
                .addGap(18, 18, 18)
                .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxMostrarSenha)
                .addGap(46, 46, 46)
                .addComponent(btnLogin)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jPassword.getAccessibleContext().setAccessibleName("Senha");
        jPassword.getAccessibleContext().setAccessibleDescription("Campo para preencher a senha de acesso.");
        btnLogin.getAccessibleContext().setAccessibleDescription("Botão para efetuar o login na aplicação.");
        jTextLogin.getAccessibleContext().setAccessibleName("Login");
        jTextLogin.getAccessibleContext().setAccessibleDescription("Campo para preencher o login de acesso.");
        jCheckBoxMostrarSenha.getAccessibleContext().setAccessibleDescription("Campo de seleção para mostrar a senha");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxMostrarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMostrarSenhaActionPerformed
        if (jCheckBoxMostrarSenha.isSelected()) {
            jPassword.setEchoChar((char) 0);
        } else {
            jPassword.setEchoChar('•');
        }
    }//GEN-LAST:event_jCheckBoxMostrarSenhaActionPerformed

    private void jTextLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextLoginActionPerformed

    /**
     * Método acionado ao clicar no botão de login.
     * <p>
     * Este método realiza a validação das credenciais inseridas pelo usuário.
     * Se a autenticação for bem-sucedida, redireciona o usuário para a próxima
     * tela; caso contrário, exibe uma mensagem de erro.
     * </p>
     *
     * @param evt o evento acionado ao clicar no botão
     */
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String username = jTextLogin.getText();
        String password = new String(jPassword.getPassword());

        try (Connection conn = DatabaseConnection.getConnection()) {
            String checkUserQuery = "SELECT tipo_usuario FROM usuarios WHERE email = ?";
            PreparedStatement checkStmt = conn.prepareStatement(checkUserQuery);
            checkStmt.setString(1, username);
            ResultSet rsCheck = checkStmt.executeQuery();

            if (rsCheck.next()) {
                String tipoUsuario = rsCheck.getString("tipo_usuario");
                String query = "SELECT tipo_usuario FROM usuarios WHERE email = ? AND senha = ?";
                PreparedStatement stmt = conn.prepareStatement(query);
                stmt.setString(1, username);
                stmt.setString(2, password);
                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    if (password.equals("Senha123")) { 
                        alterarSenha(username);
                    } else {
                        Menu telaPrincipal = new Menu(tipoUsuario);
                        telaPrincipal.setVisible(true);
                        dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Usuário ou senha incorretos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Usuário não cadastrado no sistema");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro durante o login: " + e.getMessage());
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void jPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordActionPerformed
    private void alterarSenha(String username) {
        JPasswordField senhaAtualField = new JPasswordField();
        JPasswordField novaSenhaField = new JPasswordField();
        Object[] message = {
            "Digite a senha atual:", senhaAtualField,
            "Digite a nova senha:", novaSenhaField
        };

        int option = JOptionPane.showConfirmDialog(null, message, "Alterar Senha", JOptionPane.OK_CANCEL_OPTION);

        if (option == JOptionPane.OK_OPTION) {
            String senhaAtual = new String(senhaAtualField.getPassword());
            String novaSenha = new String(novaSenhaField.getPassword());

            try (Connection conn = DatabaseConnection.getConnection()) {
                String checkPasswordQuery = "SELECT * FROM usuarios WHERE email = ? AND senha = ?";
                PreparedStatement checkStmt = conn.prepareStatement(checkPasswordQuery);
                checkStmt.setString(1, username);
                checkStmt.setString(2, senhaAtual);
                ResultSet rsCheck = checkStmt.executeQuery();

                if (rsCheck.next()) {
                    String updatePasswordQuery = "UPDATE usuarios SET senha = ? WHERE email = ?";
                    PreparedStatement updateStmt = conn.prepareStatement(updatePasswordQuery);
                    updateStmt.setString(1, novaSenha);
                    updateStmt.setString(2, username);
                    updateStmt.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Senha alterada com sucesso!");
                    Menu telaPrincipal = new Menu(rsCheck.getString("tipo_usuario"));
                    telaPrincipal.setVisible(true);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Senha atual incorreta.");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro ao alterar a senha: " + e.getMessage());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Login;
    private javax.swing.JLabel Senha;
    private javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox jCheckBoxMostrarSenha;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JTextField jTextLogin;
    private javax.swing.JLabel nomeSistema;
    private javax.swing.JPanel painelCor;
    // End of variables declaration//GEN-END:variables
}
